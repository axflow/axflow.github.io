---
import { getAuthors } from "../authors";
import Layout from "../layouts/Default.astro";
import { getCollection } from "astro:content";
import { humanTime } from "../lib/utils";
const allBlogPosts = await getCollection("posts", ({ data }) => {
  return data.published;
});
---

<Layout title="Blog">
  <main
    class="relative mx-auto max-w-2xl px-0 md:px-8 lg:p0 selection:bg-teal-200 selection:text-zinc-900 min-h-screen"
  >
    <div class="px-6 text-center">
      <h1
        class="mx-auto bg-gradient-to-tr from-purple-600 via-teal-200 to-white bg-clip-text pb-6 pt-10 font-bold text-5xl font-medium text-transparent opacity-90 bg-blend-screen drop-shadow sm:text-6xl md:pt-12 lg:text-7xl mb-4"
      >
        Axflow blog
      </h1>
      <p class="text-white/70 leading-8 text-zinc-50">
        Our thoughts on the AI space, why we're building Axflow, and more.
      </p>
      <div
        class="mt-10 space-y-16 border-t border-gray-800 pt-10 sm:mt-16 sm:pt-16"
      >
      </div>
    </div>

    <div class="flex flex-col gap-12 w-full pb-20">
      {
        allBlogPosts
          .filter((post) => post.data.published)
          .sort((a, b) =>
            a.data.published === undefined || b.data.published === undefined
              ? 0
              : a.data.published < b.data.published
                ? 1
                : -1,
          )
          .map(
            (post) =>
              post.data.published && (
                <a href={`/blog/${post.slug}`}>
                  <article class="p-6 flex max-w-2xl flex-col items-start justify-between rounded-xl hover:bg-zinc-900">
                    <div class="flex items-center gap-4 text-xs flex-wrap">
                      <time
                        datetime={post.data.published.toISOString()}
                        class="text-gray-500"
                      >
                        {humanTime(post.data.published)}
                      </time>
                      <div class="flex items-center gap-2 flex-wrap">
                        {post.data.tags.map((tag) => (
                          <div class="rounded-full bg-zinc-800 px-3 py-1.5 font-medium text-gray-400 truncate">
                            {tag}
                          </div>
                        ))}
                      </div>
                    </div>
                    <div class="group relative hover:opacity-80">
                      <h3 class="mt-3 text-xl font-semibold leading-6 text-white">
                        <span class="absolute inset-0" />
                        {post.data.title}
                      </h3>
                      <p class="mt-5 line-clamp-3 text-sm leading-6 text-gray-300">
                        {post.data.description}
                      </p>
                    </div>
                    <div class="relative mt-6 flex items-center gap-x-4">
                      {getAuthors(post.data.authors).map((author) => (
                        <li class="flex items-center font-medium whitespace-nowrap">
                          <img
                            src={author.avatar}
                            alt={`${author.name}'s avatar`}
                            class="mr-3 w-9 h-9 rounded-full bg-slate-50 dark:bg-slate-800"
                            decoding="async"
                          />
                          <div class="text-sm leading-4">
                            <div class="text-zinc-700 dark:text-zinc-400">
                              {author.name}
                            </div>
                          </div>
                        </li>
                      ))}
                    </div>
                  </article>
                </a>
              ),
          )
      }
    </div>
  </main>
</Layout>
